{"version":3,"sources":["images/logo.png","Components/Cards/Cards.module.css","store/app/type.js","store/app/dispatch.js","Components/OptionSelector/OptionSelector.jsx","Components/Cards/Cards.jsx","Components/Loader/Loader.jsx","Components/App/App.jsx","store/app/reducer.js","store/store.js","index.js"],"names":["module","exports","actionType","COVID19_INITIALISE_INFLIGHT","COVID19_INITIALISE_SUCCESS","COVID19_INITIALISE_ERROR","COVID19_BY_COUNTRIES_INFLIGHT","COVID19_BY_COUNTRIES_SUCCESS","COVID19_BY_COUNTRIES_ERROR","get","url","axios","initialise","dispatch","type","then","meta","data","countries","dailySummary","daily","payload","covid19GlobalStats","label","value","confirmed","dailyIncrease","slice","total","recovered","deaths","map","country","name","covid19CountryStats","appInitialised","lastUpdated","reportDate","catch","acCovid19ByCountry","getState","app","lastUpdate","Promise","resolve","reject","a","date","Date","parse","d","getDate","m","getMonth","y","getFullYear","r1","r2","x1","reducer","arr","reduce","acc","countryRegion","toLowerCase","Math","abs","Number","x2","acGetIncrease","color","OptionSelector","handleCountryChange","list","defaultValue","NativeSelect","onChange","e","target","i","key","style","marginTop","toLocaleDateString","Cards","items","countUpProps","end","prefix","suffix","start","duration","separator","className","styles","container","ind","cssMod","infected","cx","card","getGridProps","App","inFlight","isError","React","useEffect","src","coronaImage","alt","onClick","propType","PropTypes","bool","isRequired","string","arrayOf","any","acCovid19Daily","func","acCovid19Countries","connect","state","bindActionCreators","t","Object","assign","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a615b5a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__33yw7\",\"infected\":\"Cards_infected__1zPUl\",\"recovered\":\"Cards_recovered__3yhxp\",\"deaths\":\"Cards_deaths__3YUFu\",\"card\":\"Cards_card__QjhxC\",\"label\":\"Cards_label__3fXuU\",\"value\":\"Cards_value__xiVsk\"};","const actionType = {\n  COVID19_INITIALISE_INFLIGHT: \"COVID19_INITIALISE_INFLIGHT\",\n  COVID19_INITIALISE_SUCCESS: \"COVID19_INITIALISE_SUCCESS\",\n  COVID19_INITIALISE_ERROR: \"COVID19_INITIALISE_ERROR\",\n  COVID19_BY_COUNTRIES_INFLIGHT: \"COVID19_BY_COUNTRIES_INFLIGHT\",\n  COVID19_BY_COUNTRIES_SUCCESS: \"COVID19_BY_COUNTRIES_SUCCESS\",\n  COVID19_BY_COUNTRIES_ERROR: \"COVID19_BY_COUNTRIES_ERROR\"\n};\n\nexport default actionType;\n","import type from \"./type\";\nimport axios from \"axios\";\n\nconst get = url => axios.get(url || \"https://covid19.mathdro.id/api\");\n\nexport const initialise = () => dispatch => {\n  dispatch({ type: type.COVID19_INITIALISE_INFLIGHT });\n  get()\n    .then(({ data: meta }) => {\n      get(meta.countries).then(({ data: { countries } }) => {\n        get(meta.dailySummary).then(({ data: daily }) => {\n          dispatch({\n            type: type.COVID19_INITIALISE_SUCCESS,\n            payload: {\n              meta,\n              covid19GlobalStats: [\n                {\n                  label: \"infected\",\n                  value: meta.confirmed.value,\n                  dailyIncrease:\n                    daily.slice(-1)[0].confirmed.total -\n                    daily.slice(-2)[0].confirmed.total\n                },\n                {\n                  label: \"recovered\",\n                  value: meta.recovered.value\n                },\n                {\n                  label: \"deaths\",\n                  value: meta.deaths.value,\n                  dailyIncrease:\n                    daily.slice(-1)[0].deaths.total -\n                    daily.slice(-2)[0].deaths.total\n                }\n              ],\n              countries: countries.map(country => country.name),\n              country: \"Global\",\n              covid19CountryStats: null,\n              appInitialised: true,\n              lastUpdated: daily.slice(-1)[0].reportDate\n            }\n          });\n        });\n      });\n    })\n    .catch(() => dispatch({ type: type.COVID19_INITIALISE_ERROR }));\n};\n\nconst acGetIncrease = (country, { dailySummary }, lastUpdate) =>\n  new Promise(async (resolve, reject) => {\n    const date = new Date(Date.parse(lastUpdate));\n    const d = date.getDate();\n    const m = date.getMonth();\n    const y = date.getFullYear();\n    const r1 = await get(`${dailySummary}/${m + 1}-${d - 1}-${y}`);\n    const r2 = await get(`${dailySummary}/${m + 1}-${d - 2}-${y}`);\n    if (r1 && r2) {\n      const reducer = arr =>\n        arr.reduce(\n          (acc, { countryRegion, confirmed, deaths, recovered }) => {\n            if (countryRegion.toLowerCase() === country.toLowerCase()) {\n              return acc\n                ? {\n                    confirmed: Math.abs(\n                      Number(acc.confirmed) + Number(confirmed)\n                    ),\n                    deaths: Math.abs(Number(acc.deaths) + Number(deaths)),\n                    recovered: Math.abs(\n                      Number(acc.recovered) + Number(recovered)\n                    )\n                  }\n                : {\n                    confirmed,\n                    deaths,\n                    recovered\n                  };\n            } else {\n              return acc;\n            }\n          },\n          {\n            confirmed: 0,\n            deaths: 0,\n            recovered: 0\n          }\n        );\n\n      const x1 = reducer(r1.data || {});\n      const x2 = reducer(r2.data || {});\n\n      resolve({\n        confirmed: Math.abs((x1.confirmed || 0) - (x2.confirmed || 0)),\n        deaths: Math.abs((x1.deaths || 0) - (x2.deaths || 0)),\n        recovered: Math.abs((x1.recovered || 0) - (x2.recovered || 0))\n      });\n    } else\n      resolve({\n        confirmed: 0,\n        deaths: 0,\n        recovered: 0\n      });\n  });\n\nexport const acCovid19ByCountry = country => (dispatch, getState) => {\n  if (country === \"\") dispatch(initialise());\n  else {\n    dispatch({ type: type.COVID19_BY_COUNTRIES_INFLIGHT });\n    get(country ? `${getState().app.meta.countries}/${country}` : \"\")\n      .then(({ data }) => {\n        acGetIncrease(country, getState().app.meta, data.lastUpdate).then(\n          ({ confirmed, recovered, deaths }) => {\n            dispatch({\n              type: type.COVID19_BY_COUNTRIES_SUCCESS,\n              payload: {\n                lastUpdated: data.lastUpdate,\n                country,\n                covid19CountryStats: [\n                  {\n                    label: \"infected\",\n                    value: data.confirmed.value,\n                    color: \"rgba(0,0, 255, 0.5)\",\n                    dailyIncrease: confirmed || null\n                  },\n                  {\n                    label: \"recovered\",\n                    value: data.recovered.value,\n                    color: \"rgba(0,255, 0, 0.5)\",\n                    dailyIncrease: recovered || null\n                  },\n                  {\n                    label: \"deaths\",\n                    value: data.deaths.value,\n                    color: \"rgba(255,0, 0, 0.5)\",\n                    dailyIncrease: deaths || null\n                  }\n                ]\n              }\n            });\n          }\n        );\n      })\n      .catch(() => dispatch({ type: type.COVID19_BY_COUNTRIES_ERROR }));\n  }\n};\n","import React from \"react\";\nimport { NativeSelect } from \"@material-ui/core\";\n\nconst OptionSelector = ({ handleCountryChange, list, label, defaultValue }) => {\n  return (\n    <>\n      <NativeSelect\n        defaultValue={defaultValue}\n        onChange={e => {\n          handleCountryChange(e.target.value);\n        }}\n      >\n        <option value=\"\">Global</option>\n        {list.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n      <div style={{ marginTop: \"10px\" }}>\n        Last updated: {new Date(Date.parse(label)).toLocaleDateString()}\n      </div>\n    </>\n  );\n};\n\nexport default OptionSelector;\n","import React from \"react\";\nimport CountUP from \"react-countup\";\nimport cx from \"classnames\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ items }) => {\n  const getGridProps = (label, key) => {\n    if (!label) return false;\n\n    let cssMod = false;\n    if (label.toLowerCase() === \"infected\") {\n      cssMod = styles.infected;\n    }\n    if (label.toLowerCase() === \"recovered\") {\n      cssMod = styles.recovered;\n    }\n    if (label.toLowerCase() === \"deaths\") {\n      cssMod = styles.deaths;\n    }\n\n    return {\n      key,\n      className: cx(styles.card, cssMod)\n    };\n  };\n  const countUpProps = (end, prefix, suffix = \"\") => ({\n    start: 0,\n    duration: 2.5,\n    separator: \",\",\n    className: styles.value,\n    end,\n    prefix,\n    suffix\n  });\n  return (\n    <div className={styles.container}>\n      {items.map(({ label, value, dailyIncrease }, ind) => (\n        <div {...getGridProps(label, ind)}>\n          <div className={styles.label}>{label}</div>\n          <CountUP {...countUpProps(value, \"Total: \")} />\n          {dailyIncrease && (\n            <div>\n              <CountUP {...countUpProps(dailyIncrease, \"New: (+\", \")\")} />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\r\nimport \"./Loader.scss\";\r\n\r\nexport default () => <div className=\"loader\">Loading...</div>;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { initialise, acCovid19ByCountry } from \"src/store/app/dispatch\";\nimport coronaImage from \"src/images/logo.png\";\nimport OptionSelector from \"src/Components/OptionSelector/OptionSelector\";\nimport Cards from \"src/Components/Cards/Cards\";\nimport \"src/Components/App/App.scss\";\nimport Loader from \"src/Components/Loader/Loader\";\n\nconst App = ({\n  inFlight,\n  isError,\n  lastUpdated,\n  appInitialised,\n  countries,\n  country,\n  covid19GlobalStats,\n  covid19CountryStats,\n  initialise,\n  acCovid19ByCountry\n}) => {\n  React.useEffect(() => {\n    if (!appInitialised) {\n      initialise();\n    }\n  }, [appInitialised, initialise]);\n  return (\n    <>\n      <header className=\"App__header\">\n        <img\n          className=\"App__content App__header__image\"\n          src={coronaImage}\n          alt=\"COVID-19\"\n        />\n      </header>\n      <main className=\"App__main\">\n        {isError && (\n          <div className=\"App__content App__main__error\" onClick={initialise}>\n            Something went wrong, click to refresh!{\" \"}\n          </div>\n        )}\n        {!isError && (\n          <div\n            className={`${!inFlight ? \"App__main__content \" : \"\"}App__content`}\n          >\n            {inFlight && <Loader />}\n            {!inFlight && countries && (\n              <OptionSelector\n                {...{\n                  handleCountryChange: acCovid19ByCountry,\n                  list: countries,\n                  label: lastUpdated,\n                  defaultValue: country || \"\"\n                }}\n              />\n            )}\n            {!inFlight && (covid19CountryStats || covid19GlobalStats) && (\n              <Cards items={covid19CountryStats || covid19GlobalStats} />\n            )}\n          </div>\n        )}\n      </main>\n      <footer className=\"App__footer\">\n        &copy; Made with love by Vinnie {new Date().getFullYear()}\n      </footer>\n    </>\n  );\n};\n\nApp.propType = {\n  inFlight: PropTypes.bool.isRequired,\n  isError: PropTypes.bool.isRequired,\n  lastUpdated: PropTypes.string.isRequired,\n  countries: PropTypes.arrayOf(PropTypes.string),\n  country: PropTypes.string,\n  covid19CountryStats: PropTypes.any,\n  covid19GlobalStats: PropTypes.any,\n  acCovid19Daily: PropTypes.func.isRequired,\n  acCovid19Countries: PropTypes.func.isRequired,\n  acCovid19ByCountry: PropTypes.func.isRequired,\n  appInitialised: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({ ...state.app });\nexport const mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      initialise,\n      acCovid19ByCountry\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import t from \"./type\";\n\nconst reducer = (state = {}, { payload, type }) => {\n  switch (type) {\n    case t.COVID19_INITIALISE_INFLIGHT:\n    case t.COVID19_BY_COUNTRIES_INFLIGHT:\n      return Object.assign({}, state, { inFlight: true, isError: false });\n    case t.COVID19_INITIALISE_SUCCESS:\n    case t.COVID19_BY_COUNTRIES_SUCCESS:\n      return Object.assign(\n        {},\n        state,\n        { ...payload },\n        { inFlight: false, isError: false }\n      );\n    case t.COVID19_INITIALISE_ERROR:\n    case t.COVID19_BY_COUNTRIES_ERROR:\n      return Object.assign(\n        {},\n        { isError: true },\n        { inFlight: false, appInitialised: true }\n      );\n    default:\n      return Object.assign({}, state, { inFlight: false });\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport app from \"src/store/app/reducer\";\n\nconst rootReducer = combineReducers({\n  app\n});\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"src/Components/App/App\";\nimport store from \"src/store/store\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <Provider {...{ store }}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}